# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- none

pool:
  vmImage: ubuntu-latest

steps:
- task: Docker@2
  inputs:
    containerRegistry: 'loginwebsvcnn'
    repository: 'loginwebimage'
    command: 'buildAndPush'
    Dockerfile: '$(Build.sourcesdirectory)/mslearn-aks-workshop-ratings-web-master/Dockerfile'
    tags: '$(tag)'
- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Build.sourcesdirectory)'
    Contents: '**/*.yaml'
    TargetFolder: '$(build.artifactstagingdirectory)'
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'
- task: replacetokens@5
  inputs:
    rootDirectory: '$(build.artifactstagingdirectory)'
    targetFiles: '**/deployment.yaml'
    encoding: 'auto'
    tokenPattern: 'rm'
    writeBOM: true
    actionOnMissing: 'warn'
    keepToken: false
    actionOnNoFiles: 'continue'
    enableTransforms: false
    enableRecursion: false
    useLegacyPattern: false
    enableTelemetry: true
- task: KubernetesManifest@1
  inputs:
    action: 'deploy'
    connectionType: 'kubernetesServiceConnection'
    kubernetesServiceConnection: 'ratingsakssvc'
    namespace: 'ratingsapp'
    manifests: '$(build.artifactstagingdirectory)/**/deployment.yaml'

- task: KubernetesManifest@1
  inputs:
    action: 'deploy'
    connectionType: 'kubernetesServiceConnection'
    kubernetesServiceConnection: 'ratingsakssvc'
    namespace: 'ratingsapp'
    manifests: '$(build.artifactstagingdirectory)/**/services.yaml'
