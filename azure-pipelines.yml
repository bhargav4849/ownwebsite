# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- none

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'airflowsvccnn'
  imageRepository: 'ratingsapp'
  containerRegistry: 'di01airflowacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/mslearn-aks-workshop-ratings-web-master/Dockerfile'
  tag: '594'  #'$(Build.BuildId)'
  imagename: 'di01airflowacr.azurecr.io/ratingsweb'
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    # - task: Docker@2
    #   displayName: Build and push an image to container registry
    #   inputs:
    #     command: buildAndPush
    #     repository: $(imageRepository)
    #     dockerfile: $(dockerfilePath)
    #     containerRegistry: $(dockerRegistryServiceConnection)
    #     tags: |
    #       $(tag)

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.sourcesdirectory)'
        Contents: '**/*.yaml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy image
  jobs:  
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: KubernetesManifest@0
      displayName: createSecret
      inputs:
        action: 'createSecret'
        kubernetesServiceConnection: 'ratingsapp'
        namespace: 'ratingsapp'
        secretType: 'dockerRegistry'
        secretName: 'aks-secret-ratingsapp'
        dockerRegistryEndpoint: 'airflowsvccnn'

    - task: DownloadBuildArtifacts@1
      inputs:
          buildType: 'current'
          downloadType: 'single'
          artifactName: 'drop'
          itemPattern: '**/*.yaml'
          downloadPath: '$(System.ArtifactsDirectory)'

    # - task: DownloadPipelineArtifact@2
    #   inputs:
    #     artifactName: 'configuration'
    #     downloadpath: '$(System.ArtifactsDirectory)/configuration'
    # - task: replacetokens@5
    #   inputs:
    #     rootDirectory: '$(System.ArtifactsDirectory)'
    #     targetFiles: 'configuration/deployment.yaml'
    #     encoding: 'auto'
    #     tokenPattern: 'rm'
    #     writeBOM: true
    #     actionOnMissing: 'warn'
    #     keepToken: false
    #     actionOnNoFiles: 'continue'
    #     enableTransforms: false
    #     enableRecursion: false
    #     useLegacyPattern: false
    #     enableTelemetry: true

    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'ratingsapp'
        namespace: 'ratingsapp'
        manifests: '$(System.ArtifactsDirectory)/**/deployment.yaml'
        containers: 'di01airflowacr.azurecr.io/ratingsapp:$(tag)'

    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'ratingsapp'
        namespace: 'ratingsapp'
        manifests: '$(System.ArtifactsDirectory)/**/services.yaml'
        containers: 'di01airflowacr.azurecr.io/ratingsapp:$(tag)'